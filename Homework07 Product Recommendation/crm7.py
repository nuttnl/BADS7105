# -*- coding: utf-8 -*-
"""crm7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cmhh4cgHSVAxwUnh5GsOk9CV8Cf3m_-r
"""

pip install mlxtend

import pandas as pd
import numpy as np

df = pd.read_csv('/content/drive/MyDrive/CRM/Customer Preference Survey.csv')

!pip install -U --pre matplotlib

!wget https://github.com/Phonbopit/sarabun-webfont/raw/master/fonts/thsarabunnew-webfont.ttf
# !pip install -U --pre matplotlib  
import matplotlib as mpl
mpl.font_manager.fontManager.addfont('thsarabunnew-webfont.ttf') # 3.2+
mpl.rc('font', family='TH Sarabun New')

import matplotlib
import matplotlib.font_manager as fm

from os import path
if not path.exists('Sarabun-Regular.ttf'):
    !wget https://github.com/google/fonts/blob/master/ofl/sarabun/Sarabun-Regular.ttf?raw=true -O Sarabun-Regular.ttf

df.head(5)

#df.isnull()

df = df.drop(0, axis=0)
df.reset_index(drop=True) # Reset index

df = df.drop(1, axis=0)
df.reset_index(drop=True) # Reset index

df = df.drop('Unnamed: 62', axis=1)

df.head(5)
df.reset_index(drop=True) # Reset index

df.info()

df1 = df[['หมูแดดเดียว','เครื่องย่อยเศษอาหาร.1','เครื่องตรวจน้ำตาลในเลือด','แพ็คเกจไทยเที่ยวไทย','กระเป๋า chanel','ถั่งเช่า']]
df1.describe()

# impute data
df['หมูแดดเดียว'] = df['หมูแดดเดียว'].replace(np.nan, 'เคย')
df[['เครื่องย่อยเศษอาหาร.1','เครื่องตรวจน้ำตาลในเลือด','แพ็คเกจไทยเที่ยวไทย','กระเป๋า chanel','ถั่งเช่า']] = df[['เครื่องย่อยเศษอาหาร.1','เครื่องตรวจน้ำตาลในเลือด','แพ็คเกจไทยเที่ยวไทย','กระเป๋า chanel','ถั่งเช่า']].replace(np.nan, 'ไม่เคย')
df.describe()

df = df.drop('Timestamp', axis=1)
df.head(5)
df.reset_index(drop=True)

df.replace('ไม่เคย',0,inplace = True)
df.replace('เคย',1,inplace = True)
df.replace("",1,inplace = True)
df.fillna(0)
df.replace(np.nan, 0)
df.head(5)

def encode_units(x):
    if x <= 0:
        return 0
    if x >= 1:
        return 1
df = df.applymap(encode_units)

from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules

frequent_itemsets = apriori(df, min_support=0.5, use_colnames=True)

rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1)
rules.head(10)

rules[ (rules['lift'] >= 1) &
       (rules['confidence'] >= 0.5) ]

pip install matplotlib==3.1.3

import matplotlib.pyplot as plt
import networkx as nx

fig, ax=plt.subplots(figsize=(10,4))
GA=nx.from_pandas_edgelist(rules,source='antecedents',target='consequents')
nx.draw(GA,with_labels=True)
plt.show()

item_item_matrix = pd.DataFrame(index=df.columns,columns=df.columns)

from scipy.spatial.distance import cosine

for i in range(0,len(item_item_matrix.columns)) :
    # Loop through the columns for each column
    for j in range(0,len(item_item_matrix.columns)) :
      # Fill in placeholder with cosine similarities
      item_item_matrix.iloc[i,j] = 1 -cosine(df.iloc[:,i],df.iloc[:,j])

links = item_item_matrix.rename_axis('related item', 
                                     axis='columns').stack().reset_index()
links.columns = ['item', 'related item','value']

links_filtered=links.loc[ (links['value'] > 0.6) & 
                         (links['item'] != links['related item']) ]

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
fig, ax=plt.subplots(figsize=(10,4))

GA=nx.from_pandas_edgelist(links_filtered,source='item',target='related item')
nx.draw(GA,with_labels=True,node_color="r",font_family='TH Sarabun New')
plt.show()